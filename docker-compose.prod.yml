version: "3.3"

services:
  db:
    environment:
      - POSTGRES_PASSWORD

  api:
    image: "ghcr.io/03b8/dcb_berlin_guide_backend:${TAG:-latest}"
    command: gunicorn --bind 0.0.0.0:8000 berlin_guide.wsgi:application
    environment:
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      DEBUG: "${DEBUG:-false}"
      ALLOWED_HOSTS: "${ALLOWED_HOSTS}"
      CORS_ALLOW_ALL_ORIGINS: "${CORS_ALLOW_ALL_ORIGINS}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost`) && PathPrefix(`/api`) || PathPrefix(`/admin`)"
      - "traefik.http.middlewares.api-replacepathregex.replacepathregex.regex=^/api/(.*)"
      - "traefik.http.middlewares.api-replacepathregex.replacepathregex.replacement=/"
      - "traefik.http.routers.api.entrypoints=web"

  webapp:
    image: "ghcr.io/03b8/dcb_berlin_guide_frontend:${TAG:-latest}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webapp.rule=Host(`localhost`)"
      - "traefik.http.routers.webapp.entrypoints=web"

  reverse-proxy:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
