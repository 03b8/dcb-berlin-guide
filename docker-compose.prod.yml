version: "3.9"

services:
  db:
    environment:
      - POSTGRES_PASSWORD

  api:
    image: "ghcr.io/03b8/dcb_berlin_guide_backend:${TAG:-latest}"
    depends_on:
      - db
    command: gunicorn --bind 0.0.0.0:8000 berlin_guide.wsgi:application
    expose:
      - "8000"
    environment:
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      DEBUG: "${DEBUG:-false}"
      ALLOWED_HOSTS: "${ALLOWED_HOSTS}"
      CORS_ALLOW_ALL_ORIGINS: "${CORS_ALLOW_ALL_ORIGINS}"
      SECRET_KEY: "${SECRET_KEY}"
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`${BERLIN_GUIDE_DOMAIN?Variable not set}`) && PathPrefix(`/api/`) || PathPrefix(`/admin/`) || PathPrefix(`/django-static/`)"
        - "traefik.http.routers.api.entrypoints=http"
        - "traefik.http.services.api.loadbalancer.server.port=8000"
        - "traefik.docker.network=berlin-guide_default"

  webapp:
    image: "ghcr.io/03b8/dcb_berlin_guide_frontend:${TAG:-latest}"
    depends_on:
      - api
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.webapp.rule=Host(`${BERLIN_GUIDE_DOMAIN?Variable not set}`)"
        - "traefik.http.routers.webapp.entrypoints=http"
        - "traefik.http.services.webapp.loadbalancer.server.port=80"
        - "traefik.docker.network=berlin-guide_default"

  reverse-proxy:
    image: "traefik:v2.4"
    deploy:
      placement:
        constraints:
          - "node.role == manager"
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.reverse-proxy.rule=Host(`${BERLIN_GUIDE_DOMAIN?Variable not set}`)"
        - "traefik.http.services.reverse-proxy.loadbalancer.server.port=80"
        - "traefik.docker.network=berlin-guide_default"

    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.swarmmode"
      - "--entrypoints.http.address=:80"
      - "--api"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
